/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 /Users/namikawayuusuke/Desktop/名称未設定フォルダ 9/my-next-project/public/models/nami_room_new.glb -o /Users/namikawayuusuke/Desktop/名称未設定フォルダ 9/my-next-project/app/_components/nami_room.tsx -r public
*/

import * as THREE from "three";
import React, { useEffect, useState } from "react";
import { useGLTF, useProgress, useVideoTexture } from "@react-three/drei";
import { useRef } from "react";
import { useRouter } from "next/navigation";
import gsap from "gsap";
import { usePathname } from "next/navigation";
import { useModel3DStore } from "../store/model3dStore";
// type GLTFResult = GLTF & {
//   nodes: {
//     poster_nami: THREE.Mesh
//     wall_shelf: THREE.Mesh
//     wall_shelf001: THREE.Mesh
//     poster_sakaba: THREE.Mesh
//     Cube: THREE.Mesh
//     Cube001: THREE.Mesh
//     Cube002: THREE.Mesh
//     Cube003: THREE.Mesh
//     Cube004: THREE.Mesh
//     Cube005: THREE.Mesh
//     Cube006: THREE.Mesh
//     Sphere: THREE.Mesh
//     Cube007: THREE.Mesh
//     Sphere001: THREE.Mesh
//     Cube008: THREE.Mesh
//     Sphere002: THREE.Mesh
//     BézierCurve: THREE.Mesh
//     Circle: THREE.Mesh
//     Cube009: THREE.Mesh
//     Cylinder: THREE.Mesh
//     Cube012: THREE.Mesh
//     Cube013: THREE.Mesh
//     Cube018: THREE.Mesh
//     Cube019: THREE.Mesh
//     Cube020: THREE.Mesh
//     Cube021: THREE.Mesh
//     Cube022: THREE.Mesh
//     Cube023: THREE.Mesh
//     Cube029: THREE.Mesh
//     Cube030: THREE.Mesh
//     Cube031: THREE.Mesh
//     Cube032: THREE.Mesh
//     Cube033: THREE.Mesh
//     Cube034: THREE.Mesh
//     Cube035: THREE.Mesh
//     Cube036: THREE.Mesh
//     Cube037: THREE.Mesh
//     Cube040: THREE.Mesh
//     Cube041: THREE.Mesh
//     Cube042: THREE.Mesh
//     Cube043: THREE.Mesh
//     Cube044: THREE.Mesh
//     Cube046: THREE.Mesh
//     Cube047: THREE.Mesh
//     keyboard: THREE.Mesh
//     Cube014: THREE.Mesh
//     Cube038: THREE.Mesh
//     Cube039: THREE.Mesh
//     Cube028: THREE.Mesh
//     Cube045: THREE.Mesh
//     Cylinder001: THREE.Mesh
//     Cylinder003: THREE.Mesh
//     Cylinder002: THREE.Mesh
//     Cylinder005: THREE.Mesh
//     Cylinder006: THREE.Mesh
//     Circle002: THREE.Mesh
//     Torus005: THREE.Mesh
//     Cube015: THREE.Mesh
//     Cylinder009: THREE.Mesh
//     Cylinder010: THREE.Mesh
//     Cylinder011: THREE.Mesh
//     Cylinder012: THREE.Mesh
//     Plane006: THREE.Mesh
//     Cylinder004: THREE.Mesh
//     Plane008: THREE.Mesh
//     Cube010: THREE.Mesh
//     Cylinder007: THREE.Mesh
//     Cube011: THREE.Mesh
//     Cube016: THREE.Mesh
//     Cube017: THREE.Mesh
//     Cube024: THREE.Mesh
//     Cube026: THREE.Mesh
//     Cube027: THREE.Mesh
//     Cylinder008: THREE.Mesh
//     Circle001: THREE.Mesh
//     dumbbell_bar: THREE.Mesh
//     dumbbell_parts: THREE.Mesh
//     dumbbell_weights: THREE.Mesh
//     dumbbell_bar001: THREE.Mesh
//     Cube025: THREE.Mesh
//     Cube048: THREE.Mesh
//     Cube049: THREE.Mesh
//     Cube050: THREE.Mesh
//     Cube051: THREE.Mesh
//     Cube052: THREE.Mesh
//     Cube053: THREE.Mesh
//     Cube054: THREE.Mesh
//     Cube055: THREE.Mesh
//     Cylinder019: THREE.Mesh
//     Cylinder020: THREE.Mesh
//     Cylinder021: THREE.Mesh
//     Cylinder022: THREE.Mesh
//     Cylinder023: THREE.Mesh
//     Cylinder024: THREE.Mesh
//     pc_base: THREE.Mesh
//     pc_frame: THREE.Mesh
//     pc_screen: THREE.Mesh
//     Plane_about: THREE.Mesh
//     Text_about: THREE.Mesh
//     Plane_lifelog: THREE.Mesh
//     Text_lifelog: THREE.Mesh
//     Plane_techlog: THREE.Mesh
//     Text_techlog: THREE.Mesh
//     rug: THREE.Mesh
//   }
//   materials: {
//     ['Material.003']: THREE.MeshStandardMaterial
//     ['Material.011']: THREE.MeshStandardMaterial
//     ['Material.016']: THREE.MeshStandardMaterial
//     ['Material.010']: THREE.MeshStandardMaterial
//     ['Material.001']: THREE.MeshStandardMaterial
//     ['Material.008']: THREE.MeshStandardMaterial
//     white: THREE.MeshStandardMaterial
//     gold: THREE.MeshStandardMaterial
//     green: THREE.MeshStandardMaterial
//     blown: THREE.MeshStandardMaterial
//     black_gray: THREE.MeshStandardMaterial
//     bblue: THREE.MeshStandardMaterial
//     ['Material.007']: THREE.MeshStandardMaterial
//     tiru_green: THREE.MeshStandardMaterial
//     ['Material.024']: THREE.MeshStandardMaterial
//     ['Material.014']: THREE.MeshStandardMaterial
//     choco: THREE.MeshStandardMaterial
//     ['Material.012']: THREE.MeshStandardMaterial
//     ['Material.015']: THREE.MeshStandardMaterial
//     Material: THREE.MeshStandardMaterial
//     switch_black: THREE.MeshStandardMaterial
//     metallic_silver: THREE.MeshStandardMaterial
//     ['Material.009']: THREE.MeshStandardMaterial
//     ['Material.023']: THREE.MeshStandardMaterial
//   }
//   animations: GLTFAction[]
// }

export function NamiRoom() {
  const { isScreenClicked, setIsScreenClicked, isDumbbleClicked, setIsDumbbleClicked } = useModel3DStore();
  const router = useRouter();
  const videoTexture = useVideoTexture("/video/test.mp4");
  const [videoMaterial, setVideoMaterial] = useState<THREE.MeshBasicMaterial | null>(null);
  const [isHovered, setIsHovered] = useState(false);
  const gltf = useGLTF("/models/nami_room_new.glb");
  const { nodes, materials } = gltf as any;
  const groupRef = useRef<THREE.Group>(null);
  const pcScreenRef = useRef<THREE.Mesh>(null);
  const { progress } = useProgress();
  const pathname = usePathname();
  useEffect(() => {
    if (progress === 100 && groupRef.current) {
      // 初期状態を設定
      groupRef.current.rotation.x = Math.PI / 4; // 45度上に傾ける
      groupRef.current.rotation.y = -Math.PI / 2; // 下側から開始
      groupRef.current.position.y = -2; // 下に配置

      // アニメーション
      gsap.to(groupRef.current.rotation, {
        x: 0,
        y: 0,
        duration: 3,
        ease: "power2.out",
      });

      gsap.to(groupRef.current.position, {
        y: 0,
        duration: 2,
        ease: "power2.out",
      });
    }
  }, [progress]);

  useEffect(() => {
    if (videoTexture) {
      const material = new THREE.MeshBasicMaterial({
        map: videoTexture,
        side: THREE.DoubleSide,
        transparent: true,
      });
      videoTexture.flipY = false; // テクスチャを反転
      setVideoMaterial(material);
    }
  }, [videoTexture]);
  function mouseOn(e: any) {
    e.stopPropagation();
    setIsHovered(true);
    document.body.classList.add("custom-cursor");
    const mouseStalker = document.querySelector("[data-mouse-stalker]");
    if (mouseStalker) {
      mouseStalker.classList.add("is-hover");
    }
  }
  function mouseOut(e: any) {
    e.stopPropagation();
    setIsHovered(false);
    document.body.classList.remove("custom-cursor");
    const mouseStalker = document.querySelector("[data-mouse-stalker]");
    if (mouseStalker) {
      mouseStalker.classList.remove("is-hover");
    }
  }
  useEffect(() => {
    setIsHovered(false);
    document.body.classList.remove("custom-cursor");
    const mouseStalker = document.querySelector("[data-mouse-stalker]");
    if (mouseStalker) {
      mouseStalker.classList.remove("is-hover");
    }
  }, [pathname]);
  return (
    <group ref={groupRef} dispose={null}>
      <mesh
        geometry={nodes.poster_nami.geometry}
        material={materials["Material.003"]}
        position={[-0.99, 1.683, -0.483]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.454, 0.231, 0.255]}
        castShadow
      />
      <mesh
        geometry={nodes.wall_shelf.geometry}
        material={materials["Material.011"]}
        position={[-0.846, 1.72, 0.531]}
        castShadow
      />
      <mesh
        geometry={nodes.wall_shelf001.geometry}
        material={materials["Material.011"]}
        position={[-0.888, 1.402, 0.531]}
        scale={[0.837, 1, 1]}
        castShadow
      />
      <mesh
        geometry={nodes.poster_sakaba.geometry}
        material={materials["Material.016"]}
        position={[-0.997, 1.115, -0.483]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.454, 0.231, 0.255]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials["Material.010"]}
        position={[0.001, 1.01, 0]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={materials["Material.010"]}
        position={[0, 1.024, 0]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube002.geometry}
        material={materials["Material.001"]}
        position={[-0.002, 1.318, -1.1]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube003.geometry}
        material={materials["Material.011"]}
        position={[0, 1.155, 0]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube004.geometry}
        material={materials["Material.008"]}
        position={[-0.685, 0.779, 0.431]}
        scale={[0.357, 0.514, 0.357]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={materials["Material.008"]}
        position={[-0.685, 0.725, 0.431]}
        scale={[0.357, 0.565, 0.357]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube006.geometry}
        material={materials.white}
        position={[-0.672, 0.645, 0.707]}
        scale={[0.357, 0.368, 0.357]}
        castShadow
      />
      <mesh
        geometry={nodes.Sphere.geometry}
        material={materials.gold}
        position={[-0.355, 0.645, 0.707]}
        scale={0.009}
        castShadow
      />
      <mesh
        geometry={nodes.Cube007.geometry}
        material={materials.white}
        position={[-0.672, 0.494, 0.707]}
        scale={[0.357, 0.368, 0.357]}
        castShadow
      />
      <mesh
        geometry={nodes.Sphere001.geometry}
        material={materials.gold}
        position={[-0.355, 0.494, 0.707]}
        scale={0.009}
        castShadow
      />
      <mesh
        geometry={nodes.Cube008.geometry}
        material={materials.white}
        position={[-0.672, 0.343, 0.707]}
        scale={[0.357, 0.368, 0.357]}
        castShadow
      />
      <mesh
        geometry={nodes.Sphere002.geometry}
        material={materials.gold}
        position={[-0.355, 0.343, 0.707]}
        scale={0.009}
        castShadow
      />
      <mesh
        geometry={nodes.BézierCurve.geometry}
        material={materials.green}
        position={[0.801, 0.52, -0.699]}
        rotation={[0, 0, Math.PI / 2]}
        scale={0.145}
        castShadow
      />
      <mesh
        geometry={nodes.Circle.geometry}
        material={materials.blown}
        position={[0.801, 0.52, -0.699]}
        scale={0.114}
        castShadow
      />
      <mesh
        geometry={nodes.Cube009.geometry}
        material={materials.black_gray}
        position={[0.801, 0.52, -0.699]}
        scale={0.132}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials["Material.001"]}
        position={[0.801, 0.407, -0.699]}
        scale={0.132}
        castShadow
      />
      <mesh
        geometry={nodes.Cube012.geometry}
        material={materials.bblue}
        position={[-0.92, 1.853, 0.715]}
        rotation={[-1.419, -1.553, -3.029]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube013.geometry}
        material={materials.white}
        position={[-0.92, 1.853, 0.715]}
        rotation={[-1.419, -1.553, -3.029]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube018.geometry}
        material={materials.bblue}
        position={[-0.845, 1.761, 0.412]}
        rotation={[0, -0.624, 0]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube019.geometry}
        material={materials["Material.007"]}
        position={[-0.845, 1.761, 0.412]}
        rotation={[0, -0.624, 0]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube020.geometry}
        material={materials.tiru_green}
        position={[-0.921, 1.851, 0.66]}
        rotation={[-2.28, -1.547, 2.393]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube021.geometry}
        material={materials.white}
        position={[-0.921, 1.851, 0.66]}
        rotation={[-1.419, -1.553, -3.029]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube022.geometry}
        material={materials.white}
        position={[-0.921, 1.853, 0.6]}
        rotation={[-1.615, -1.553, 3.058]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube023.geometry}
        material={materials.white}
        position={[-0.921, 1.853, 0.6]}
        rotation={[-1.615, -1.553, 3.058]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube029.geometry}
        material={materials.bblue}
        position={[-0.935, 1.521, 0.426]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube030.geometry}
        material={materials.white}
        position={[-0.935, 1.521, 0.426]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube031.geometry}
        material={materials.tiru_green}
        position={[-0.935, 1.518, 0.377]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube032.geometry}
        material={materials.white}
        position={[-0.935, 1.518, 0.377]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube033.geometry}
        material={materials.white}
        position={[-0.935, 1.52, 0.323]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube034.geometry}
        material={materials.white}
        position={[-0.935, 1.52, 0.323]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube035.geometry}
        material={materials.bblue}
        position={[-0.934, 1.516, 0.585]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube036.geometry}
        material={materials.white}
        position={[-0.934, 1.516, 0.585]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube037.geometry}
        material={materials.tiru_green}
        position={[-0.934, 1.517, 0.536]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube040.geometry}
        material={materials.white}
        position={[-0.934, 1.517, 0.536]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
      />
      <mesh
        geometry={nodes.Cube041.geometry}
        material={materials.white}
        position={[-0.934, 1.515, 0.483]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube042.geometry}
        material={materials.white}
        position={[-0.934, 1.515, 0.483]}
        rotation={[-1.45, -1.55, -3.056]}
        scale={[0.089, 0.02, 0.053]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube043.geometry}
        material={materials.bblue}
        position={[-0.84, 1.443, 0.757]}
        rotation={[0, -0.624, 0]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube044.geometry}
        material={materials["Material.007"]}
        position={[-0.84, 1.443, 0.757]}
        rotation={[0, -0.624, 0]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube046.geometry}
        material={materials.bblue}
        position={[-0.669, 0.521, -0.776]}
        rotation={[0, -0.624, 0]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube047.geometry}
        material={materials["Material.007"]}
        position={[-0.669, 0.521, -0.776]}
        rotation={[0, -0.624, 0]}
        scale={[0.099, 0.022, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.keyboard.geometry}
        material={materials["Material.024"]}
        position={[-0.611, 0.821, 0.42]}
        scale={[1.269, 1, 1]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube014.geometry}
        material={materials.white}
        position={[-0.657, 0.834, 0.574]}
        rotation={[-Math.PI, 1.564, -Math.PI]}
        scale={[0.012, 0.005, 0.012]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube038.geometry}
        material={materials["Material.011"]}
        position={[-0.774, 0.463, -0.75]}
        scale={[0.178, 0.267, 0.178]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube039.geometry}
        material={materials.black_gray}
        position={[-0.774, 0.466, -0.75]}
        scale={0.178}
        castShadow
      />
      <mesh
        geometry={nodes.Cube028.geometry}
        material={materials["Material.011"]}
        position={[-0.774, 0.812, -0.75]}
        scale={[0.178, 0.263, 0.178]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube045.geometry}
        material={materials.black_gray}
        position={[-0.774, 0.741, -0.75]}
        scale={0.178}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder001.geometry}
        material={materials["Material.008"]}
        position={[0.36, 0.463, -0.382]}
        scale={0.313}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder003.geometry}
        material={materials["Material.011"]}
        position={[0.581, 0.33, -0.377]}
        scale={0.313}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder002.geometry}
        material={materials["Material.014"]}
        position={[0.147, 0.33, -0.377]}
        scale={0.313}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder005.geometry}
        material={materials["Material.011"]}
        position={[0.37, 0.33, -0.17]}
        scale={0.313}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder006.geometry}
        material={materials["Material.011"]}
        position={[0.37, 0.33, -0.589]}
        scale={0.313}
        castShadow
      />
      <mesh
        geometry={nodes.Circle002.geometry}
        material={materials.choco}
        position={[0.306, 0.58, -0.361]}
        rotation={[0.684, -1.453, 0.703]}
        scale={0.043}
        castShadow
      />
      <mesh
        geometry={nodes.Torus005.geometry}
        material={materials.gold}
        position={[0.356, 0.558, -0.366]}
        rotation={[0.2, -1.301, -1.351]}
        scale={0.027}
        castShadow
      />
      <mesh
        geometry={nodes.Cube015.geometry}
        material={materials["Material.012"]}
        position={[0.308, 0.548, -0.36]}
        rotation={[0.684, -1.453, 0.703]}
        scale={0.052}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder009.geometry}
        material={materials["Material.012"]}
        position={[-0.805, 0.862, -0.764]}
        scale={0.08}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder010.geometry}
        material={materials["Material.015"]}
        position={[-0.792, 0.946, -0.765]}
        rotation={[-0.028, 0.092, 0.121]}
        scale={0.08}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder011.geometry}
        material={materials["Material.015"]}
        position={[-0.759, 0.963, -0.762]}
        rotation={[-0.042, -0.286, -0.025]}
        scale={0.08}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder012.geometry}
        material={materials["Material.015"]}
        position={[-0.752, 0.951, -0.782]}
        rotation={[-0.156, -0.343, -0.198]}
        scale={0.08}
        castShadow
      />
      <mesh
        geometry={nodes.Plane006.geometry}
        material={materials.bblue}
        position={[-0.069, 0.372, -0.794]}
        rotation={[0, -1.146, -0.798]}
        scale={0.215}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder004.geometry}
        material={materials.white}
        position={[-0.001, 1.842, -0.965]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.036, 0.431, 0.036]}
        castShadow
      />
      <mesh
        geometry={nodes.Plane008.geometry}
        material={materials.white}
        position={[-0.001, 1.552, -0.98]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.419, 0.419, 0.256]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube010.geometry}
        material={materials.Material}
        position={[-0.603, 0.837, -0.058]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder007.geometry}
        material={materials.switch_black}
        position={[-0.627, 0.849, 0.139]}
        rotation={[Math.PI / 2, 0, 0]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube011.geometry}
        material={materials.tiru_green}
        position={[-0.854, 0.891, 0.73]}
        rotation={[0.064, 0.488, 0.091]}
        scale={[0.059, 0.058, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube016.geometry}
        material={materials.tiru_green}
        position={[-0.833, 0.892, 0.751]}
        rotation={[-2.711, -1.346, -2.497]}
        scale={[0.059, 0.067, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube017.geometry}
        material={materials.tiru_green}
        position={[-0.857, 0.896, 0.757]}
        rotation={[-Math.PI, 0.623, -Math.PI]}
        scale={[0.053, 0.059, 0.057]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube024.geometry}
        material={materials.tiru_green}
        position={[-0.843, 0.885, 0.76]}
        rotation={[Math.PI, -0.425, Math.PI]}
        scale={0.05}
        castShadow
      />
      <mesh
        geometry={nodes.Cube026.geometry}
        material={materials.tiru_green}
        position={[-0.865, 0.895, 0.744]}
        rotation={[-0.802, 1.475, 0.801]}
        scale={[0.059, 0.069, 0.059]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube027.geometry}
        material={materials.tiru_green}
        position={[-0.835, 0.89, 0.731]}
        rotation={[0, -0.623, 0]}
        scale={0.059}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder008.geometry}
        material={materials.blown}
        position={[-0.847, 0.828, 0.747]}
        rotation={[0, 0.425, 0]}
        scale={0.059}
        castShadow
      />
      <mesh
        geometry={nodes.Circle001.geometry}
        material={materials.blown}
        position={[-0.847, 0.886, 0.747]}
        rotation={[0, 0.425, 0]}
        scale={0.046}
        castShadow
      />
      <mesh
        geometry={nodes.dumbbell_bar.geometry}
        material={materials.metallic_silver}
        position={[0.614, 0.353, 0.494]}
        rotation={[Math.PI / 2, 0, 0.358]}
        scale={[0.02, 0.409, 0.02]}
        onClick={() => {
          setIsDumbbleClicked(!isDumbbleClicked);
        }}
        onPointerOver={(e) => {
          mouseOn(e);
        }}
        onPointerOut={(e) => {
          mouseOut(e);
        }}
        castShadow
      />
      <mesh
        geometry={nodes.dumbbell_parts.geometry}
        material={materials.bblue}
        position={[0.539, 0.353, 0.695]}
        rotation={[Math.PI / 2, 0, 0.358]}
        scale={[0.033, 0.052, 0.033]}
        castShadow
        onClick={() => {
          setIsDumbbleClicked(!isDumbbleClicked);
        }}
        onPointerOver={(e) => {
          mouseOn(e);
        }}
        onPointerOut={(e) => {
          mouseOut(e);
        }}
      />
      <mesh
        geometry={nodes.dumbbell_weights.geometry}
        material={materials.switch_black}
        position={[0.539, 0.395, 0.695]}
        rotation={[Math.PI / 2, 0, 0.358]}
        scale={[0.144, 0.045, 0.144]}
        castShadow
        onClick={() => {
          setIsDumbbleClicked(!isDumbbleClicked);
        }}
        onPointerOver={(e) => {
          mouseOn(e);
        }}
        onPointerOut={(e) => {
          mouseOut(e);
        }}
      />
      <mesh
        geometry={nodes.dumbbell_bar001.geometry}
        material={materials["Material.024"]}
        position={[-1.074, 0.992, 1.346]}
        rotation={[-2.95, -1.542, -2.948]}
        scale={[0.02, 0.865, 0.02]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube025.geometry}
        material={materials["Material.024"]}
        position={[-0.049, 0.75, 0.194]}
        rotation={[Math.PI, -0.939, Math.PI]}
        scale={[0.217, 0.028, 0.217]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube048.geometry}
        material={materials.white}
        position={[-0.101, 0.297, 0.387]}
        rotation={[-Math.PI, 0.318, -Math.PI]}
        scale={[0.028, 0.022, 0.107]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube049.geometry}
        material={materials.white}
        position={[-0.197, 0.297, 0.254]}
        rotation={[0, 1.567, 0]}
        scale={[0.028, 0.022, 0.107]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube050.geometry}
        material={materials.white}
        position={[-0.099, 0.297, 0.122]}
        rotation={[0, 0.31, 0]}
        scale={[0.028, 0.022, 0.107]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube051.geometry}
        material={materials.white}
        position={[0.056, 0.297, 0.174]}
        rotation={[0, -0.946, 0]}
        scale={[0.028, 0.022, 0.107]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube052.geometry}
        material={materials.white}
        position={[0.055, 0.297, 0.338]}
        rotation={[Math.PI, -0.939, Math.PI]}
        scale={[0.028, 0.022, 0.107]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube053.geometry}
        material={materials["Material.024"]}
        position={[-0.03, 0.562, 0.208]}
        rotation={[Math.PI, -0.939, Math.PI]}
        scale={[0.122, 0.016, 0.122]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube054.geometry}
        material={materials.white}
        position={[-0.03, 0.625, 0.208]}
        rotation={[Math.PI, -0.939, Math.PI]}
        scale={[0.217, 0.039, 0.217]}
        castShadow
      />
      <mesh
        geometry={nodes.Cube055.geometry}
        material={materials.white}
        position={[0.182, 0.794, -0.082]}
        rotation={[Math.PI, -0.939, Math.PI]}
        scale={[0.219, 0.159, 0.219]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder019.geometry}
        material={materials["Material.024"]}
        position={[-0.133, 0.252, 0.478]}
        rotation={[-Math.PI / 2, 0, 2.176]}
        scale={[0.029, 0.016, 0.029]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder020.geometry}
        material={materials["Material.024"]}
        position={[-0.292, 0.252, 0.252]}
        rotation={[-Math.PI / 2, 0, 0.813]}
        scale={[0.029, 0.016, 0.029]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder021.geometry}
        material={materials["Material.024"]}
        position={[-0.127, 0.252, 0.031]}
        rotation={[-Math.PI / 2, 0, -1.649]}
        scale={[0.029, 0.016, 0.029]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder022.geometry}
        material={materials["Material.024"]}
        position={[0.134, 0.252, 0.119]}
        rotation={[-Math.PI / 2, 0, -1.727]}
        scale={[0.029, 0.016, 0.029]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder023.geometry}
        material={materials["Material.024"]}
        position={[0.131, 0.252, 0.396]}
        rotation={[-Math.PI / 2, 0, 2.12]}
        scale={[0.029, 0.016, 0.029]}
        castShadow
      />
      <mesh
        geometry={nodes.Cylinder024.geometry}
        material={materials.white}
        position={[-0.057, 0.312, 0.255]}
        rotation={[Math.PI, -0.939, Math.PI]}
        scale={[0.039, 0.057, 0.039]}
        castShadow
      />
      <mesh
        geometry={nodes.pc_base.geometry}
        material={materials["Material.024"]}
        position={[-0.805, 0.829, 0.444]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.347, 0.347, 0.091]}
        castShadow
      />
      <mesh
        geometry={nodes.pc_frame.geometry}
        material={materials["Material.024"]}
        position={[-0.833, 1.108, 0.428]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.305, 0.381, 0.172]}
        castShadow
      />
      <mesh
        ref={pcScreenRef}
        geometry={nodes.pc_screen.geometry}
        position={[-0.826, 1.108, 0.428]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.277, 0.347, 0.156]}
        material={videoMaterial || materials["Material.025"]}
        onClick={() => {
          setIsScreenClicked(!isScreenClicked);
        }}
        onPointerOver={(e) => {
          mouseOn(e);
        }}
        onPointerOut={(e) => {
          mouseOut(e);
        }}
        castShadow
      />
      <mesh
        geometry={nodes.Plane_about.geometry}
        material={materials["Material.024"]}
        position={[-0.996, 1.016, 1.345]}
        rotation={[Math.PI, 0, Math.PI / 2]}
        scale={[-0.115, -1, -0.286]}
        onClick={() => {
          router.push("/about");
        }}
        onPointerOver={(e) => {
          e.stopPropagation();
          gsap.to(e.object.scale, { x: -0.13, y: -1.1, z: -0.315, duration: 0.2 });
        }}
        onPointerOut={(e) => {
          e.stopPropagation();
          gsap.to(e.object.scale, { x: -0.115, y: -1, z: -0.286, duration: 0.2 });
        }}
        castShadow
      />
      <mesh
        geometry={nodes.Text_about.geometry}
        material={materials["Material.012"]}
        position={[-0.989, 0.982, 1.484]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.12}
        castShadow
      />
      <mesh
        geometry={nodes.Plane_lifelog.geometry}
        material={materials["Material.024"]}
        position={[-0.992, 1.291, 1.345]}
        rotation={[Math.PI, 0, Math.PI / 2]}
        scale={[-0.115, -1, -0.286]}
        onPointerOver={(e) => {
          e.stopPropagation();
          gsap.to(e.object.scale, { x: -0.13, y: -1.1, z: -0.315, duration: 0.2 });
        }}
        onPointerOut={(e) => {
          e.stopPropagation();
          gsap.to(e.object.scale, { x: -0.115, y: -1, z: -0.286, duration: 0.2 });
        }}
        onClick={() => {
          router.push("/life");
        }}
        castShadow
      />
      <mesh
        geometry={nodes.Text_lifelog.geometry}
        material={materials["Material.012"]}
        position={[-0.989, 1.252, 1.481]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.12}
        castShadow
      />
      <mesh
        geometry={nodes.Plane_techlog.geometry}
        material={materials["Material.024"]}
        position={[-0.988, 1.561, 1.345]}
        rotation={[Math.PI, 0, Math.PI / 2]}
        scale={[-0.115, -1, -0.286]}
        onPointerOver={(e) => {
          e.stopPropagation();
          gsap.to(e.object.scale, { x: -0.13, y: -1.1, z: -0.315, duration: 0.2 });
        }}
        onPointerOut={(e) => {
          e.stopPropagation();
          gsap.to(e.object.scale, { x: -0.115, y: -1, z: -0.286, duration: 0.2 });
        }}
        onClick={() => {
          router.push("/techlog");
        }}
        castShadow
      />
      <mesh
        geometry={nodes.Text_techlog.geometry}
        material={materials["Material.012"]}
        position={[-0.988, 1.525, 1.521]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.12}
        castShadow
      />
      <mesh
        geometry={nodes.rug.geometry}
        material={materials["Material.023"]}
        position={[0.59, 0.239, 0.482]}
        scale={[0.32, 1, 0.427]}
        castShadow
      />
    </group>
  );
}

useGLTF.preload("/models/nami_room_new.glb");
