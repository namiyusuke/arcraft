/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 /Users/namikawayuusuke/Desktop/名称未設定フォルダ 9/my-next-project/public/models/dumbbell.glb -o /Users/namikawayuusuke/Desktop/名称未設定フォルダ 9/my-next-project/app/_components/dumbbell.jsx -r public
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

export function DumbbellNew(props) {
  const { nodes, materials } = useGLTF("/models/dumbbell.glb");
  const groupRef = useRef();
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });

  // 各メッシュの位置から重心を計算
  const centerX = (0.621 + 0.621 + 0.696) / 3;
  const centerY = (0.429 + 0.388 + 0.388) / 3;
  const centerZ = (0.48 + 0.48 + 0.279) / 3;

  useFrame((state, delta) => {
    if (groupRef.current) {
      const tiltX = mousePosition.y * 0.04;
      const tiltZ = -mousePosition.x * 0.04;
      groupRef.current.rotation.x = THREE.MathUtils.lerp(groupRef.current.rotation.x, tiltX, 0.1);
      groupRef.current.rotation.z = THREE.MathUtils.lerp(groupRef.current.rotation.z, tiltZ, 0.1);
    }
  });

  const handlePointerMove = (event) => {
    // Three.jsのイベントから直接座標を取得
    const x = (event.point.x / 2) * 2;
    const y = (event.point.y / 2) * 2;
    setMousePosition({ x, y });
  };

  return (
    <group
      ref={groupRef}
      {...props}
      dispose={null}
      onPointerMove={handlePointerMove}
      onPointerLeave={() => setMousePosition({ x: 0, y: 0 })}
    >
      <mesh
        geometry={nodes.dumbbell_weights001.geometry}
        material={materials.switch_black}
        position={[0.621 - centerX, 0.429 - centerY, 0.48 - centerZ]}
        rotation={[Math.PI / 2, 0, 0.358]}
        scale={[0.144, 0.045, 0.144]}
      />
      <mesh
        geometry={nodes.dumbbell_parts001.geometry}
        material={materials.bblue}
        position={[0.621 - centerX, 0.388 - centerY, 0.48 - centerZ]}
        rotation={[Math.PI / 2, 0, 0.358]}
        scale={[0.033, 0.052, 0.033]}
      />
      <mesh
        geometry={nodes.dumbbell_bar002.geometry}
        material={materials.metallic_silver}
        position={[0.696 - centerX, 0.388 - centerY, 0.279 - centerZ]}
        rotation={[Math.PI / 2, 0, 0.358]}
        scale={[0.02, 0.409, 0.02]}
      />
    </group>
  );
}

useGLTF.preload("/models/dumbbell.glb");
